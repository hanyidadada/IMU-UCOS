


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 EXTERN           OSRunning   ; External referenc
                                                            es
    3 00000000                 EXTERN           OSPrioCur
    4 00000000                 EXTERN           OSPrioHighRdy
    5 00000000                 EXTERN           OSTCBCur
    6 00000000                 EXTERN           OSTCBHighRdy
    7 00000000                 EXTERN           OSIntNesting
    8 00000000                 EXTERN           OSIntExit
    9 00000000                 EXTERN           OSTaskSwHook
   10 00000000         
   11 00000000                 EXPORT           OS_CPU_SR_Save ; Functions decl
                                                            ared in this file
   12 00000000                 EXPORT           OS_CPU_SR_Restore
   13 00000000                 EXPORT           OSStartHighRdy
   14 00000000                 EXPORT           OSCtxSw
   15 00000000                 EXPORT           OSIntCtxSw
   16 00000000                 EXPORT           PendSV_Handler
   17 00000000         
   18 00000000         
   19 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ; Interrupt control
                                                             state register.
   20 00000000 E000ED22 
                       NVIC_SYSPRI14
                               EQU              0xE000ED22  ; System priority r
                                                            egister (priority 1
                                                            4).
   21 00000000 000000FF 
                       NVIC_PENDSV_PRI
                               EQU              0xFF        ; PendSV priority v
                                                            alue (lowest).
   22 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ; Value to trigger 
                                                            PendSV exception.
   23 00000000         
   24 00000000         
   25 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000                 THUMB
   27 00000000                 REQUIRE8
   28 00000000                 PRESERVE8
   29 00000000         
   30 00000000         
   31 00000000         OS_CPU_SR_Save
   32 00000000 F3EF 8010       MRS              R0, PRIMASK ; Set prio int mask
                                                             to mask all (excep
                                                            t faults)
   33 00000004 B672            CPSID            I
   34 00000006 4770            BX               LR
   35 00000008         
   36 00000008         OS_CPU_SR_Restore
   37 00000008 F380 8810       MSR              PRIMASK, R0
   38 0000000C 4770            BX               LR
   39 0000000E         
   40 0000000E         
   41 0000000E         OSStartHighRdy



ARM Macro Assembler    Page 2 


   42 0000000E 4824            LDR              R0, =NVIC_SYSPRI14 ; Set the Pe
                                                            ndSV exception prio
                                                            rity
   43 00000010 F04F 01FF       LDR              R1, =NVIC_PENDSV_PRI
   44 00000014 7001            STRB             R1, [R0]
   45 00000016         
   46 00000016 2000            MOVS             R0, #0      ; Set the PSP to 0 
                                                            for initial context
                                                             switch call
   47 00000018 F380 8809       MSR              PSP, R0
   48 0000001C         
   49 0000001C 4821            LDR              R0, =OSRunning 
                                                            ; OSRunning = TRUE
   50 0000001E 2101            MOVS             R1, #1
   51 00000020 7001            STRB             R1, [R0]
   52 00000022         
   53 00000022 4821            LDR              R0, =NVIC_INT_CTRL ; Trigger th
                                                            e PendSV exception 
                                                            (causes context swi
                                                            tch)
   54 00000024 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   55 00000028 6001            STR              R1, [R0]
   56 0000002A         
   57 0000002A B662            CPSIE            I           ; Enable interrupts
                                                             at processor level
                                                            
   58 0000002C         
   59 0000002C         OSStartHang
   60 0000002C E7FE            B                OSStartHang ; Should never get 
                                                            here
   61 0000002E         
   62 0000002E         
   63 0000002E         
   64 0000002E         
   65 0000002E         OSCtxSw
   66 0000002E 481E            LDR              R0, =NVIC_INT_CTRL ; Trigger th
                                                            e PendSV exception 
                                                            (causes context swi
                                                            tch)
   67 00000030 F04F 5180       LDR              R1, =NVIC_PENDSVSET
   68 00000034 6001            STR              R1, [R0]
   69 00000036 4770            BX               LR
   70 00000038         
   71 00000038         
   72 00000038         OSIntCtxSw
   73 00000038 481B            LDR              R0, =NVIC_INT_CTRL ; Trigger th
                                                            e PendSV exception 
                                                            (causes context swi
                                                            tch)
   74 0000003A F04F 5180       LDR              R1, =NVIC_PENDSVSET
   75 0000003E 6001            STR              R1, [R0]
   76 00000040 4770            BX               LR
   77 00000042         
   78 00000042         
   79 00000042         PendSV_Handler
   80 00000042 B672            CPSID            I           ; Prevent interrupt
                                                            ion during context 
                                                            switch
   81 00000044 F02E 0E1F       AND              LR, LR, #0xFFFFFFE0 



ARM Macro Assembler    Page 3 


                                                            ; Use FPU, MSP.
   82 00000048 F04E 0E09       ORR              LR, LR, #0x9
   83 0000004C         
   84 0000004C F3EF 8009       MRS              R0, PSP     ; PSP is process st
                                                            ack pointer
   85 00000050 B150            CBZ              R0, PendSVHandler_nosave ; Skip
                                                             register save the 
                                                            first time
   86 00000052         
   87 00000052         ;Is the task using the FPU context? If so, push high vfp
                        registers.
   88 00000052 F01E 0F10       tst              r14, #0x10
   89 00000056 BF08            it               eq
   90 00000058 ED20 8A10       vstmdbeq         r0!, {s16-s31}
   91 0000005C         
   92 0000005C 3820            SUBS             R0, R0, #0x20
   93 0000005E E880 0FF0       STM              R0, {R4-R11} ; Save remaining r
                                                            egs r4-11 on proces
                                                            s stack    
   94 00000062         
   95 00000062 4912            LDR              R1, =OSTCBCur ; OSTCBCur->OSTCB
                                                            StkPtr = SP;
   96 00000064 6809            LDR              R1, [R1]
   97 00000066 6008            STR              R0, [R1]    ; R0 is SP of proce
                                                            ss being switched o
                                                            ut
   98 00000068         ; At this point, entire context of process has been save
                       d
   99 00000068         PendSVHandler_nosave
  100 00000068 B500            PUSH             {R14}       ; Save LR exc_retur
                                                            n value
  101 0000006A 4811            LDR              R0, =OSTaskSwHook 
                                                            ; OSTaskSwHook();
  102 0000006C 4780            BLX              R0
  103 0000006E F85D EB04       POP              {R14}
  104 00000072         
  105 00000072 4810            LDR              R0, =OSPrioCur ; OSPrioCur = OS
                                                            PrioHighRdy;
  106 00000074 4910            LDR              R1, =OSPrioHighRdy
  107 00000076 780A            LDRB             R2, [R1]
  108 00000078 7002            STRB             R2, [R0]
  109 0000007A         
  110 0000007A 480C            LDR              R0, =OSTCBCur ; OSTCBCur  = OST
                                                            CBHighRdy;
  111 0000007C 490F            LDR              R1, =OSTCBHighRdy
  112 0000007E 680A            LDR              R2, [R1]
  113 00000080 6002            STR              R2, [R0]
  114 00000082         
  115 00000082 6810            LDR              R0, [R2]    ; R0 is new process
                                                             SP; SP = OSTCBHigh
                                                            Rdy->OSTCBStkPtr;
  116 00000084 E890 0FF0       LDM              R0, {R4-R11} ; Restore r4-11 fr
                                                            om new process stac
                                                            k
  117 00000088 3020            ADDS             R0, R0, #0x20
  118 0000008A         
  119 0000008A         ;Is the task using the FPU context? If so, pop the high 
                       vfp registers too.
  120 0000008A F01E 0F10       tst              r14, #0x10



ARM Macro Assembler    Page 4 


  121 0000008E BF08            it               eq
  122 00000090 ECB0 8A10       vldmiaeq         r0!, {s16-s31}
  123 00000094         
  124 00000094 F380 8809       MSR              PSP, R0     ; Load PSP with new
                                                             process SP
  125 00000098 F04E 0E04       ORR              LR, LR, #0x04 ; Ensure exceptio
                                                            n return uses proce
                                                            ss stack-FPU, PSP.
  126 0000009C B662            CPSIE            I
  127 0000009E 4770            BX               LR          ; Exception return 
                                                            will restore remain
                                                            ing context
  128 000000A0                 END
              E000ED22 
              00000000 
              E000ED04 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\os_cpu_a.d -o.\objects\os_cpu_a.o -I.\RTE\_ROOT -I
D:\Arm\Packs\Keil\STM32F4xx_DFP\2.14.0\Drivers\CMSIS\Device\ST\STM32F4xx\Includ
e -ID:\Keil_v5\ARM\CMSIS\Include --predefine="__MICROLIB SETA 1" --predefine="_
_UVISION_VERSION SETA 530" --predefine="STM32F407xx SETA 1" --predefine="_RTE_ 
SETA 1" --list=.\listings\os_cpu_a.lst uCos-II\port\os_cpu_a.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file uCos-II\port\os_cpu_a.asm
   Uses
      None
Comment: .text unused
OSCtxSw 0000002E

Symbol: OSCtxSw
   Definitions
      At line 65 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 14 in file uCos-II\port\os_cpu_a.asm
Comment: OSCtxSw used once
OSIntCtxSw 00000038

Symbol: OSIntCtxSw
   Definitions
      At line 72 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 15 in file uCos-II\port\os_cpu_a.asm
Comment: OSIntCtxSw used once
OSStartHang 0000002C

Symbol: OSStartHang
   Definitions
      At line 59 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 60 in file uCos-II\port\os_cpu_a.asm
Comment: OSStartHang used once
OSStartHighRdy 0000000E

Symbol: OSStartHighRdy
   Definitions
      At line 41 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 13 in file uCos-II\port\os_cpu_a.asm
Comment: OSStartHighRdy used once
OS_CPU_SR_Restore 00000008

Symbol: OS_CPU_SR_Restore
   Definitions
      At line 36 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 12 in file uCos-II\port\os_cpu_a.asm
Comment: OS_CPU_SR_Restore used once
OS_CPU_SR_Save 00000000

Symbol: OS_CPU_SR_Save
   Definitions
      At line 31 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 11 in file uCos-II\port\os_cpu_a.asm
Comment: OS_CPU_SR_Save used once
PendSVHandler_nosave 00000068

Symbol: PendSVHandler_nosave



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 99 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 85 in file uCos-II\port\os_cpu_a.asm
Comment: PendSVHandler_nosave used once
PendSV_Handler 00000042

Symbol: PendSV_Handler
   Definitions
      At line 79 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 16 in file uCos-II\port\os_cpu_a.asm
Comment: PendSV_Handler used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 19 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 53 in file uCos-II\port\os_cpu_a.asm
      At line 66 in file uCos-II\port\os_cpu_a.asm
      At line 73 in file uCos-II\port\os_cpu_a.asm

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 22 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 54 in file uCos-II\port\os_cpu_a.asm
      At line 67 in file uCos-II\port\os_cpu_a.asm
      At line 74 in file uCos-II\port\os_cpu_a.asm

NVIC_PENDSV_PRI 000000FF

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 21 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 43 in file uCos-II\port\os_cpu_a.asm
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI14 E000ED22

Symbol: NVIC_SYSPRI14
   Definitions
      At line 20 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 42 in file uCos-II\port\os_cpu_a.asm
Comment: NVIC_SYSPRI14 used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

OSIntExit 00000000

Symbol: OSIntExit
   Definitions
      At line 8 in file uCos-II\port\os_cpu_a.asm
   Uses
      None
Comment: OSIntExit unused
OSIntNesting 00000000

Symbol: OSIntNesting
   Definitions
      At line 7 in file uCos-II\port\os_cpu_a.asm
   Uses
      None
Comment: OSIntNesting unused
OSPrioCur 00000000

Symbol: OSPrioCur
   Definitions
      At line 3 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 105 in file uCos-II\port\os_cpu_a.asm
Comment: OSPrioCur used once
OSPrioHighRdy 00000000

Symbol: OSPrioHighRdy
   Definitions
      At line 4 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 106 in file uCos-II\port\os_cpu_a.asm
Comment: OSPrioHighRdy used once
OSRunning 00000000

Symbol: OSRunning
   Definitions
      At line 2 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 49 in file uCos-II\port\os_cpu_a.asm
Comment: OSRunning used once
OSTCBCur 00000000

Symbol: OSTCBCur
   Definitions
      At line 5 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 95 in file uCos-II\port\os_cpu_a.asm
      At line 110 in file uCos-II\port\os_cpu_a.asm

OSTCBHighRdy 00000000

Symbol: OSTCBHighRdy
   Definitions
      At line 6 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 111 in file uCos-II\port\os_cpu_a.asm
Comment: OSTCBHighRdy used once
OSTaskSwHook 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

Symbol: OSTaskSwHook
   Definitions
      At line 9 in file uCos-II\port\os_cpu_a.asm
   Uses
      At line 101 in file uCos-II\port\os_cpu_a.asm
Comment: OSTaskSwHook used once
8 symbols
358 symbols in table
